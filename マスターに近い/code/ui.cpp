//====================================================================================================
//
// UI処理 (ui.cpp)
// Author (Kimura kouta)
//
//====================================================================================================
#include "ui.h"
#include "renderer.h"
#include "manager.h"
#include "Game.h"
#include "Scene3D.h"


//====================================================================================================
// マクロ定義
//====================================================================================================
#define BULLET_SIZE (40)
#define MAX_LIFE (40)

//====================================================================================================
// プロトタイプ宣言
//====================================================================================================

//====================================================================================================
// グローバル変数
//====================================================================================================
LPDIRECT3DTEXTURE9 CUI::m_pTextureUi[MAX_TEXUI] = {};

//====================================================================================================
// コンストラクタ
//====================================================================================================
CUI::CUI(OBJTYPE type) : CScene2D(type)
{
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_nLife = 0;
}

CUI::CUI()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CUI::Init(D3DXVECTOR3 pos)
{
	CScene2D::Init();

	SetPos(pos);

	return S_OK;
}

//==================================================================================================
//終了処理
//===================================================================================================
void CUI::Uninit(void)
{
	CScene2D::Uninit();
}

//====================================================================================================
//更新処理
//=====================================================================================================
void CUI::Update(void)
{

}

//========================================================================================================
// 描画処理
//========================================================================================================
CUI *CUI::Create(D3DXVECTOR3 pos)
{
	CUI *pUI;

	pUI = new CUI(OBJTYPE_RANKING);

	pUI->BindTexture(m_pTextureUi[0]);

	pUI->Init(pos);

	return pUI;
}

//========================================================================================================
// テクスチャの読み込み
//========================================================================================================
HRESULT CUI::Load(void)
{
	CRenderer *pRenderer = CManager::GetRenderer();
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		"DATA/TEX/1HPbar.png",
		&m_pTextureUi[0]);

	return S_OK;
}
//=======================================================================================================
// テクスチャの破棄
//========================================================================================================
void CUI::Unload(void)
{
	for (int nCnt =0; nCnt < MAX_TEXUI; nCnt++)
	{
		// 頂点バッファの開放
		if (m_pTextureUi[nCnt] != NULL)
		{
			m_pTextureUi[nCnt]->Release();
			m_pTextureUi[nCnt] = NULL;
		}
	}
}

//========================================================================================================
// 描画処理
//========================================================================================================
void CUI::Draw(void)
{
	CScene2D::Draw();
}

//====================================================================================================
// デストラクタ
//=====================================================================================================
CUI::~CUI()
{

}